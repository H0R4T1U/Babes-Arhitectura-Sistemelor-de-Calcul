     1                                  bits 32 ;assembling for the 32 bits architecture
     2                                  global start
     3                                  
     4                                  ; we ask the assembler to give global visibility to the symbol called start 
     5                                  ;(the start label will be the entry point in the program) 
     6                                  extern exit ; we inform the assembler that the exit symbol is foreign; it exists even if we won't be defining it
     7                                  import exit msvcrt.dll  ; we specify the external library that defines the symbol
     8                                  		; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  
    10                                  ; our variables are declared here (the segment is called data) 
    11                                  segment data use32 class=data
    12                                  ; ... 
    13 00000000 00                          a db 0
    14 00000001 00                          b db 0
    15                                  ; the program code will be part of a segment called code
    16                                  segment code use32 class=code
    17                                  start:
    18                                  ; ... 
    19                                      mov [a], [b]
    19          ******************       error: invalid combination of opcode and operands
    20                                  	; call exit(0) ), 0 represents status code: SUCCESS
    21 00000000 6A00                    	push dword 0 ; saves on stack the parameter of the function exit
    22 00000002 FF15[00000000]          	call [exit] ; function exit is called in order to end the execution of the program
