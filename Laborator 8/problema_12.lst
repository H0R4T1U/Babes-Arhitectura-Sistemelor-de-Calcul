     1                                  ; Ne propunem ca programul de mai jos sa citeasca de la tastatura un numar si sa afiseze pe ecran valoarea numarului citit impreuna cu un mesaj.
     2                                  bits 32
     3                                  global start        
     4                                  
     5                                  ; declararea functiilor externe folosite de program
     6                                  extern exit, printf, scanf  ; adaugam printf si scanf ca functii externe           
     7                                  import exit msvcrt.dll     
     8                                  import printf msvcrt.dll     ; indicam asamblorului ca functia printf se gaseste in libraria msvcrt.dll
     9                                  import scanf msvcrt.dll      ; similar pentru scanf
    10                                                            
    11                                  segment  data use32 class=data
    12 00000000 00000000                	a dd 0;exitindem la DWORD ca sa nu dea overflow       ; in aceasta variabila se va stoca valoarea citita de la tastatura
    13 00000004 414649534152452050-         msg2 db "AFISARE PROGRAM!",10,13,"Introduceti un nr negativ!",10,13,0
    13 0000000D 524F4752414D210A0D-
    13 00000016 496E74726F64756365-
    13 0000001F 746920756E206E7220-
    13 00000028 6E656761746976210A-
    13 00000031 0D00               
    14 00000033 4E723A00                    msg_char db "Nr:",0
    15 00000037 0A0D4E7220696E7472-         pozitiv db 10,13,"Nr introdus nu este negativ!",0
    15 00000040 6F647573206E752065-
    15 00000049 737465206E65676174-
    15 00000052 69762100           
    16 00000056 0A0D413D2564202862-         message  db 10, 13,"A=%d (baza 10), a=%x (baza_16)",0
    16 0000005F 617A61203130292C20-
    16 00000068 613D2578202862617A-
    16 00000071 615F31362900       
    17 00000077 256900                  	format  db "%i", 0  ; %d <=> un numar decimal (baza 10)
    18                                      
    19                                  segment  code use32 class=code
    20                                      start:
    21                                                                                 
    22                                          ; vom apela scanf(format, n) => se va citi un numar in variabila n
    23                                          ; punem parametrii pe stiva de la dreapta la stanga
    24                                          ;Se da un numar natural negativ a (a: dword). Sa se afiseze valoarea lui in baza 10 si in baza 16,
    25                                          ;in urmatorul format: "a = <base_10> (baza 10), a = <base_16> (baza 16)" 
    26 00000000 68[04000000]                    push dword msg2 ; afisam mesajul AFISARE PROGRAM
    27 00000005 FF15[00000000]                  call [printf]
    28 0000000B 83C404                          add esp, 4*1
    29 0000000E 68[33000000]                    push dword msg_char
    30 00000013 FF15[00000000]                  call [printf]
    31 00000019 83C404                          add esp, 4*1
    32                                  
    33                                          ;citire 
    34 0000001C 68[00000000]                    push dword a
    35 00000021 68[77000000]                    push  dword format
    36                                  
    37 00000026 FF15[00000000]                  call  [scanf]       ; apelam functia scanf pentru citire
    38 0000002C 83C408                          add  esp, 4 * 2
    39                                          ; eliberam parametrii de pe stiva; 4 = dimensiunea unui dword; 2 = nr de parametri
    40                                          
    41                                          
    42 0000002F A1[00000000]                    mov eax, [a] ; VERICAM DACA NR INTRODUS ESTE NEGATIV
    43 00000034 83F800                          cmp eax, 0
    44 00000037 7D1D                            jge invalid 
    45                                          negativ:
    46 00000039 A1[00000000]                        mov  eax,[a]   
    47                                  
    48 0000003E 50                                  push  eax
    49 0000003F 50                                  push eax
    50 00000040 68[56000000]                        push  dword message 
    51 00000045 FF15[00000000]                      call  [printf]
    52 0000004B 83C408                              add  esp,4*2 
    53                                          
    54                                          final:
    55                                          ; exit(0)
    56 0000004E 6A00                                push  dword 0     ; punem pe stiva parametrul pentru exit
    57 00000050 FF15[00000000]                      call  [exit]       ; apelam exit pentru a incheia programul
    58                                       
    59                                          invalid :
    60 00000056 68[37000000]                        push dword pozitiv
    61 0000005B FF15[00000000]                      call [printf]
    62 00000061 83C404                              add esp, 4*1
    63 00000064 EBE8                                jmp final
    64                                              
